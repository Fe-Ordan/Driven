project.ext.set("archivesBaseName", "driven-sample");

apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(project.VERSION_SDK)
    buildToolsVersion project.VERSION_TOOLS

    defaultConfig {
        minSdkVersion Integer.parseInt(project.VERSION_SDK_MIN)
        targetSdkVersion Integer.parseInt(project.VERSION_SDK_TARGET)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME

        // -- from /user/.gradle/gradle.properties
        // replace this with your own api key
        buildConfigField "String", "DROPBOX_APP_KEY", getDropboxAppKey()
        buildConfigField "String", "DROPBOX_APP_SECRET", getDropboxAppSecret()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //compile 'com.android.support:support-v4:19.1.+'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'

    compile project(':Library')
    compile project(':Dropbox')
    compile project(':GoogleDrive')
    compile project(':ExternalDrive')
}

def getDropboxAppKey(){
    return hasProperty('DROPBOX_APP_KEY') ? '"' + DROPBOX_APP_KEY + '"' : '""'
}

def getDropboxAppSecret(){
    return hasProperty('DROPBOX_APP_SECRET') ? '"' + DROPBOX_APP_SECRET + '"' : '""'
}